{"version":3,"sources":["components/InputField/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputField","props","for","id","label","value","savings","onChange","App","React","useState","setSavings","interestRate","setInterestRate","time","setTime","className","e","target","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAWeA,MATf,SAAqBC,GACjB,OACE,qCACE,wBAAOC,IAAKD,EAAME,GAAlB,UAAuBF,EAAMG,MAA7B,OACA,uBAAOD,GAAIF,EAAME,GAAIE,MAAOJ,EAAMK,QAASC,SAAUN,EAAMM,eC2CpDC,MA7Cf,WAAgB,IAAD,EACiBC,IAAMC,SAAS,GADhC,mBACNJ,EADM,KACGK,EADH,OAE2BF,IAAMC,SAAS,GAF1C,mBAENE,EAFM,KAEQC,EAFR,OAGWJ,IAAMC,SAAS,GAH1B,mBAGNI,EAHM,KAGAC,EAHA,KAOb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iCACE,8BACE,cAAC,EAAD,CACEZ,MAAM,YACND,GAAG,UACHE,MAAOC,EACPC,SAZY,SAACU,GAAD,OAAON,GAAYM,EAAEC,OAAOb,YAe5C,8BACE,cAAC,EAAD,CACED,MAAM,kBACND,GAAG,OACHE,MAAOO,EACPL,SAnBiB,SAACU,GAAD,OAAOJ,GAAiBI,EAAEC,OAAOb,YAsBtD,8BACE,cAAC,EAAD,CACED,MAAM,SACND,GAAG,OACHE,MAAOS,EACPP,SA1BS,SAACU,GAAD,OAAOF,GAASE,EAAEC,OAAOb,eA8BxC,wCACU,IACPc,KAAKC,MAAMd,EAAO,SAAI,EAAIM,EAAe,IAAQE,GAAO,KAAO,aC9B3DO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2be7e1f5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction InputField (props) {\r\n    return (\r\n      <>\r\n        <label for={props.id}>{props.label} </label>\r\n        <input id={props.id} value={props.savings} onChange={props.onChange} />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default InputField;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport InputField from \"./components/InputField\";\n\nfunction App() {\n  const [savings, setSavings] = React.useState(0);\n  const [interestRate, setInterestRate] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const onSavingsChange = (e) => setSavings(+e.target.value);\n  const onInterestRateChange = (e) => setInterestRate(+e.target.value);\n  const onTimeChange = (e) => setTime(+e.target.value);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form>\n          <div>\n            <InputField\n              label=\"Savings: \"\n              id=\"savings\"\n              value={savings}\n              onChange={onSavingsChange}\n            />\n          </div>\n          <div>\n            <InputField\n              label=\"Interest rate: \"\n              id=\"rate\"\n              value={interestRate}\n              onChange={onInterestRateChange}\n            />\n          </div>\n          <div>\n            <InputField\n              label=\"Time: \"\n              id=\"time\"\n              value={time}\n              onChange={onTimeChange}\n            />\n          </div>\n        </form>\n        <p>\n          Result:{\" \"}\n          {Math.round(savings * (1 + interestRate / 100) ** time * 100) / 100}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}